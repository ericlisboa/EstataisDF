# Importando as bibliotecas
import streamlit as st
import numpy as np
import pandas as pd
import plotly.express as px
import plotly.graph_objs as go
import base64
import matplotlib.pyplot as plt
import seaborn as sns

# Caminho relativo ao arquivo CSV
file_path = '../BD_Completo_Nacional_Formatado.csv'

# Carregando o arquivo CSV no Pandas DataFrame
df = pd.read_csv(file_path)

# Configura√ß√µes da p√°gina
st.set_page_config(
    page_title="Quais s√£o as estatais do DF?",
    page_icon="üìà",
    layout="wide"
)

st.header("Quais s√£o as estatais do DF?", divider="green")

# Conte√∫do espec√≠fico desta p√°gina
st.write("""

No ano de 2023, o Distrito Federal possu√≠a 26 empresas estatais ativas. Esse n√∫mero permaneceu est√°vel em rela√ß√£o aos anos de 2021 e 2022. J√° em 2020, o DF contava com 22 estatais, evidenciando um aumento no quantitativo dessas institui√ß√µes ao longo do per√≠odo analisado.

A expans√£o do n√∫mero de empresas ocorreu devido √† cria√ß√£o de quatro novas estatais ligadas ao setor energ√©tico, todas pertencentes ao grupo CEB (Companhia Energ√©tica de Bras√≠lia), a saber:

1. CEB Gera√ß√£o ‚Äì Respons√°vel pela produ√ß√£o de energia el√©trica em usinas pr√≥prias e participa√ß√£o em projetos de gera√ß√£o.
2. CEB Ilumina√ß√£o P√∫blica e Servi√ßos ‚Äì Voltada √† gest√£o e opera√ß√£o da infraestrutura de ilumina√ß√£o p√∫blica no Distrito Federal.
3. CEB Lajeado ‚Äì Criada para atua√ß√£o espec√≠fica no setor de energia, com foco em projetos estrat√©gicos de gera√ß√£o e distribui√ß√£o.
4. CEB Participa√ß√µes ‚Äì Destinada √† administra√ß√£o de participa√ß√µes societ√°rias da CEB em empresas do setor el√©trico.

Al√©m das empresas em opera√ß√£o, o painel identificou quatro estatais em processo de liquida√ß√£o no ano de 2023. O encerramento dessas entidades pode estar relacionado a reestrutura√ß√µes estrat√©gicas, fus√µes ou inviabilidade econ√¥mica. As empresas em liquida√ß√£o s√£o:

1. CODEPLAN - Companhia de Planejamento do Distrito Federal ‚Äì Empresa p√∫blica tradicionalmente voltada ao planejamento e desenvolvimento de solu√ß√µes tecnol√≥gicas para o governo.
2. DF Gest√£o de Ativos ‚Äì Criada para administrar ativos do Governo do Distrito Federal, mas encerrada devido a reestrutura√ß√µes no modelo de gest√£o patrimonial.
3. PROFLORA - Florestamento e Reflorestamento ‚Äì Empresa focada em projetos ambientais e reflorestamento, cuja liquida√ß√£o pode indicar mudan√ßas na pol√≠tica ambiental do estado.
4. SAB - Sociedade de Abastecimento de Bras√≠lia ‚Äì Atuava na distribui√ß√£o de produtos aliment√≠cios e insumos, sendo descontinuada por quest√µes operacionais e econ√¥micas.

A an√°lise do comportamento do n√∫mero de estatais no DF ao longo do tempo permite compreender as mudan√ßas na estrutura da administra√ß√£o indireta, refletindo decis√µes estrat√©gicas do governo quanto √† viabilidade, efici√™ncia e necessidade dessas entidades. O acompanhamento desses processos de cria√ß√£o e liquida√ß√£o √© essencial para garantir que as empresas p√∫blicas cumpram seus objetivos de forma sustent√°vel, promovendo servi√ßos essenciais sem comprometer o equil√≠brio fiscal do estado.

""")	

st.subheader("Empresas do Distrito Federal em 2023", divider="green")

# Filter the dataset for companies located in Distrito Federal (DF), and from the year 2023
df_2023_df_companies = df[(df["Estado"] == "DF") & (df["Ano"] == 2023)].copy()

# Select relevant columns: company name (emp), sit, setor, esp, dep
df_2023_df_companies_list = df_2023_df_companies[
    ["emp", "sit", "setor", "esp", "dep"]
].sort_values(by="emp")

# Rename columns
df_2023_df_companies_list.columns = [
    "Empresa",
    "Situa√ß√£o",
    "Setor",
    "Natureza",
    "Depend√™ncia",
]

# Reset index to make sure DataFrame starts fresh without showing old indices
df_2023_df_companies_list.reset_index(drop=True, inplace=True)

# Style the DataFrame for a modern look
df_styled = df_2023_df_companies_list.style.set_properties(
    **{
        "background-color": "#fff",
        "color": "#333",
        "border-color": "#ccc",
        "border-style": "solid",
        "border-width": "1px",
        "padding": "10px",
        "text-align": "left",
        "font-family": "Arial, sans-serif",
        "font-size": "12px",  # Reduce the font size
    }
)

# Set table styles for headers
df_styled.set_table_styles(
    [
        {
            "selector": "thead th",
            "props": [
                ("background-color", "#007acc"),
                ("color", "white"),
                ("font-size", "14px"),
                ("text-align", "center"),
            ],
        }
    ]
)

# Display the styled dataframe
df_styled


st.subheader("Distribui√ß√£o das Empresas Estatais do DF por Depend√™ncia Financeira", divider="green")

# Conte√∫do espec√≠fico desta p√°gina
st.write("""

O gr√°fico abaixo mostra a quantidade de estatais dependentes e n√£o dependentes. A an√°lise da depend√™ncia financeira das estatais do Distrito Federal revela um equil√≠brio entre empresas autossuficientes e aquelas que necessitam de aportes do governo para sustentar suas opera√ß√µes. O gr√°fico correspondente, abaixo, ilustra que 27% das estatais distritais s√£o classificadas como dependentes, o que equivale a 7 empresas do total de 26. Essa categoriza√ß√£o √© definida com base nos crit√©rios estabelecidos pela Lei de Responsabilidade Fiscal (LRF), que determina que uma empresa estatal dependente √© aquela que recebe recursos financeiros do governo controlador para cobrir despesas correntes, sejam elas relacionadas a pessoal, custeio geral ou investimentos de capital, exclu√≠dos os aportes oriundos de aumento de participa√ß√£o acion√°ria.

A distin√ß√£o entre empresas dependentes e n√£o dependentes √© um aspecto fundamental na gest√£o das estatais, pois permite compreender o impacto fiscal dessas entidades no or√ßamento distrital. Empresas n√£o dependentes s√£o aquelas que geram receitas suficientes para cobrir seus custos operacionais, n√£o exigindo repasses do governo para manter suas atividades. Na pr√°tica, isso significa que seu funcionamento n√£o compromete diretamente os cofres p√∫blicos, o que representa um modelo de gest√£o financeiramente sustent√°vel.

Por outro lado, as empresas dependentes necessitam de suporte financeiro do tesouro distrital para cobrir suas despesas. Essa depend√™ncia pode ocorrer devido √† natureza da atividade desempenhada, que pode n√£o ser rent√°vel sob uma √≥tica estritamente comercial, mas essencial para o interesse p√∫blico. Servi√ßos como saneamento, transporte p√∫blico e pesquisa agropecu√°ria, por exemplo, tendem a depender de subs√≠dios governamentais para garantir que a popula√ß√£o tenha acesso universal a esses servi√ßos, independentemente de sua viabilidade econ√¥mica.

Contudo, a depend√™ncia financeira n√£o pode ser interpretada como um indicativo isolado de inefici√™ncia ou m√° gest√£o. Uma empresa que recebe repasses do governo n√£o deve ser automaticamente classificada como mal administrada, pois a finalidade social da estatal precisa ser considerada na an√°lise. Empresas que operam em setores cr√≠ticos para o desenvolvimento social, como habita√ß√£o e abastecimento de alimentos, podem desempenhar um papel fundamental mesmo que suas opera√ß√µes n√£o sejam lucrativas. Dessa forma, a avalia√ß√£o deve ir al√©m da depend√™ncia financeira e considerar o impacto socioecon√¥mico da estatal, suas entregas √† sociedade e a efici√™ncia na aplica√ß√£o dos recursos p√∫blicos.

Entretanto, a depend√™ncia financeira n√£o pode ser um fator irrestrito para a concess√£o de recursos p√∫blicos, sob o risco de comprometer a sustentabilidade fiscal do estado. O aporte de verbas governamentais precisa ser acompanhado de rigorosos mecanismos de transpar√™ncia, controle e presta√ß√£o de contas, garantindo que os recursos sejam empregados de forma eficiente e que os benef√≠cios gerados para a popula√ß√£o justifiquem os investimentos realizados. O monitoramento cont√≠nuo das finan√ßas das estatais, aliado a auditorias independentes e relat√≥rios detalhados, √© essencial para assegurar que as empresas dependentes operem com responsabilidade fiscal, efici√™ncia e compromisso com a melhoria da presta√ß√£o de servi√ßos p√∫blicos.

Em s√≠ntese, a depend√™ncia financeira das estatais do DF deve ser analisada sob um vi√©s estrat√©gico e de governan√ßa, considerando tanto a sustentabilidade econ√¥mica quanto o impacto social dessas entidades. Um modelo de gest√£o eficiente deve equilibrar autossufici√™ncia financeira e a necessidade de manter servi√ßos p√∫blicos essenciais, garantindo que os repasses do tesouro distrital sejam justificados por benef√≠cios tang√≠veis para a sociedade.

""")	

# Filtrar o dataset para obter empresas localizadas no Distrito Federal (DF)
df_df = df[df["Estado"] == "DF"]

# Agrupar por 'Ano' e 'dep' (depend√™ncia) e contar o n√∫mero de empresas
df_grouped = df_df.groupby(["Ano", "dep"]).size().reset_index(name="company_count")

# Criar um conjunto completo de combina√ß√µes de ano e depend√™ncia
anos = df_grouped["Ano"].unique()
dependencias = ["Dependente", "N√£o Dependente"]

# Criar um conjunto completo de combina√ß√µes de ano e depend√™ncia
complete_index = pd.MultiIndex.from_product([anos, dependencias], names=["Ano", "dep"])
df_complete = (
    df_grouped.set_index(["Ano", "dep"])
    .reindex(complete_index, fill_value=0)
    .reset_index()
)

# Calcular o total de empresas por ano
totais_anuais = df_complete.groupby("Ano")["company_count"].sum()

# Configura√ß√£o da largura das barras
largura_barra = 0.35
fig, ax = plt.subplots(figsize=(10, 6))

# Posi√ß√µes para as barras
indice = np.arange(len(anos))

# Mapear as cores para diferentes depend√™ncias
cores = {"Dependente": "#F45046", "N√£o Dependente": "#007acc"}

# Plotar as barras para cada status de depend√™ncia
for i, dependencia in enumerate(dependencias):
    subset = df_complete[df_complete["dep"] == dependencia]
    barras = ax.bar(
        indice + i * largura_barra,
        subset["company_count"],
        largura_barra,
        label=dependencia,
        color=cores[dependencia],
    )

    # Adicionar os valores e porcentagens nas barras
    for j, barra in enumerate(barras):
        altura = barra.get_height()
        ano = subset.iloc[j]["Ano"]
        total_ano = totais_anuais[ano]
        porcentagem = (altura / total_ano) * 100 if total_ano > 0 else 0
        ax.annotate(
            f"{int(altura)}\n({porcentagem:.1f}%)",
            xy=(barra.get_x() + barra.get_width() / 2, altura),
            xytext=(0, 3),
            textcoords="offset points",
            ha="center",
            va="bottom",
        )

# Adicionar r√≥tulos, t√≠tulo e legenda
ax.set_xlabel("Ano")
ax.set_ylabel("N√∫mero de Empresas")
ax.set_title("")
ax.set_xticks(indice + largura_barra / 2)
ax.set_xticklabels(anos)
ax.legend(title="Status de Depend√™ncia")

# Remover as bordas do gr√°fico
for spine in plt.gca().spines.values():
    spine.set_visible(False)

# Ajustar o layout
plt.tight_layout()

# Centralizar o gr√°fico com largura limitada
col1, col2, col3 = st.columns([5, 1, 1])
with col1:
    st.pyplot(fig)

st.subheader("An√°lise da Quantidade de Empresas Estatais por Setor no Distrito Federal", divider="green")

st.write("""

O gr√°fico abaixo ilustra a distribui√ß√£o das empresas estatais do Distrito Federal por setores corporativos entre 2020 e 2023. Nota-se que os setores Financeiro, Energia e Habita√ß√£o e Urbaniza√ß√£o se destacam como os mais representativos em termos de n√∫mero de empresas ao longo de todo o per√≠odo. O setor Financeiro mant√©m consistentemente seis empresas ativas, lideradas pelo grupo BRB, que diversifica suas opera√ß√µes em servi√ßos banc√°rios, seguros, cart√µes e investimentos. Essa estabilidade reflete a import√¢ncia estrat√©gica do setor financeiro para o desenvolvimento econ√¥mico do DF e sua robustez em termos de estrutura organizacional.

O setor de Energia, liderado pelas empresas do grupo CEB, registrou um aumento significativo no n√∫mero de empresas de quatro em 2020 para cinco em 2021, e manteve esse quantitativo nos anos subsequentes. Esse crescimento est√° diretamente relacionado √† cria√ß√£o de novas subsidi√°rias, como a CEB Gera√ß√£o, CEB Ilumina√ß√£o P√∫blica e Servi√ßos, e CEB Participa√ß√µes, refor√ßando o foco na expans√£o e segmenta√ß√£o dos servi√ßos energ√©ticos no DF. A amplia√ß√£o desse setor demonstra a inten√ß√£o do governo de modernizar a infraestrutura energ√©tica, diversificar as opera√ß√µes e melhorar a presta√ß√£o de servi√ßos p√∫blicos, principalmente em √°reas cr√≠ticas como ilumina√ß√£o e gera√ß√£o de energia sustent√°vel.

O setor de Habita√ß√£o e Urbaniza√ß√£o, representado por empresas como a CODHAB e a NOVACAP, manteve tr√™s empresas ativas durante todo o per√≠odo analisado, evidenciando um foco constante em projetos habitacionais e urban√≠sticos. Outros setores, como Transporte e Saneamento, apresentam menor n√∫mero de empresas, refletindo sua concentra√ß√£o em operadores-chave, como o Metr√¥/DF e a CAESB,respectivamente. Al√©m disso, setores como Pesquisa e Assist√™ncia T√©cnica Agropecu√°ria e Gest√£o de Ativos mantiveram estabilidade com apenas uma empresa cada, indicando especializa√ß√£o e foco em nichos espec√≠ficos. Em contraste, o setor de G√°s e Derivados permaneceu limitado, com apenas uma empresa, a CEBG√ÅS, ao longo dos anos, sugerindo potencial para expans√£o futura, dada a crescente relev√¢ncia de combust√≠veis alternativos e infraestrutura de g√°s natural no Brasil.

De forma geral, o gr√°fico destaca uma estrutura relativamente est√°vel de estatais por setor no DF, com varia√ß√µes pontuais, como o crescimento do setor energ√©tico. Essa estabilidade √© reflexo do planejamento estrat√©gico do governo, que prioriza setores com maior impacto socioecon√¥mico, como energia, habita√ß√£o e servi√ßos financeiros. Essa an√°lise pode subsidiar decis√µes sobre poss√≠veis reestrutura√ß√µes ou expans√µes, com foco em maximizar a efici√™ncia operacional e o impacto das estatais no desenvolvimento local.

""")	

# Filtrar o dataset para obter empresas localizadas no Distrito Federal (DF)
df_df = df[df["Estado"] == "DF"]

# Agrupar por 'Ano' e 'setor' e contar o n√∫mero de empresas
df_grouped_setor = (
    df_df.groupby(["Ano", "setor"]).size().reset_index(name="company_count")
)

# Criar um conjunto completo de combina√ß√µes de ano e setor
anos = df_grouped_setor["Ano"].unique()
setores = df_grouped_setor["setor"].unique()

# Criar um conjunto completo de combina√ß√µes de ano e setor
complete_index = pd.MultiIndex.from_product([anos, setores], names=["Ano", "setor"])
df_complete_setor = (
    df_grouped_setor.set_index(["Ano", "setor"])
    .reindex(complete_index, fill_value=0)
    .reset_index()
)

# Criar um gr√°fico colorido com Plotly Express
fig = px.bar(
    df_complete_setor, 
    x="Ano", 
    y="company_count", 
    color="setor",
    barmode="group",
    title="",
    labels={"company_count": "N√∫mero de Empresas", "Ano": "Ano", "setor": "Setor"},
    height=600
)

# Personalizar o layout
fig.update_layout(
    legend=dict(
        orientation="h",
        yanchor="bottom",
        y=-0.3,
        xanchor="center",
        x=0.5,
        font=dict(color="black", size=12),  # Texto da legenda em preto
        bgcolor="white",  # Fundo da legenda em branco
        bordercolor="lightgrey",  # Borda cinza claro para melhorar a defini√ß√£o visual
        borderwidth=1  # Espessura da borda
    ),
    plot_bgcolor='white',
    xaxis=dict(
        tickmode='linear',
        type='category',
        tickfont=dict(color="black"),  # Cor dos r√≥tulos do eixo X
        title_font=dict(color="black")  # Cor do t√≠tulo do eixo X
    ),
    yaxis=dict(
        tickfont=dict(color="black"),  # Cor dos r√≥tulos do eixo Y
        title_font=dict(color="black")  # Cor do t√≠tulo do eixo Y
    ),
    margin=dict(l=20, r=20, t=50, b=20),
    hoverlabel=dict(
        bgcolor="white",
        font_size=12,
        font_family="Arial",
        font_color="black"  # Altera√ß√£o na cor da fonte do hover
    )
)

# Adicionar r√≥tulos de valores nas barras
fig.update_traces(
    texttemplate='%{y:.0f}', 
    textposition='outside',
    textfont=dict(color="black")  # Texto dos valores em preto
)

# Exibir o gr√°fico no Streamlit
st.plotly_chart(fig, use_container_width=True)




# Bot√£o para voltar √† p√°gina inicial
if st.button("Voltar √† P√°gina Inicial"):
    st.switch_page("In√≠cio.py")